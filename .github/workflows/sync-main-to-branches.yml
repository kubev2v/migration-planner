name: Sync Main to Release Branches

on:
  push:
    branches:
      - main

jobs:
  sync_to_side_branches:
    runs-on: ubuntu-latest

    permissions:
      contents: write # Needed for pushing to release branches

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history to ensure we have the main branch's commits
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"

      - name: Sync main to active release branch (or create it)
        run: |
          MAIN_BRANCH="main"
          ACTIVE_RELEASE_BRANCH=$(cat .github/release-config.txt)

          # Validate that the variable is set
          if [ -z "$ACTIVE_RELEASE_BRANCH" ]; then
            echo "Error: ACTIVE_RELEASE_BRANCH is not configured in .github/release-config.txt"
            exit 1
          fi

          # Validate format: release-<number>.<number>
          if ! echo "$ACTIVE_RELEASE_BRANCH" | grep -qE '^release-[0-9]+\.[0-9]+$'; then
            echo "Error: ACTIVE_RELEASE_BRANCH has invalid format: '$ACTIVE_RELEASE_BRANCH'"
            echo "Expected format: release-<number>.<number> (e.g., release-0.2)"
            exit 1
          fi

          echo "Using active release branch: $ACTIVE_RELEASE_BRANCH"

          # Get the latest commit hash of the main branch
          MAIN_COMMIT_HASH=$(git rev-parse origin/$MAIN_BRANCH)
          echo "Main branch's latest commit hash: $MAIN_COMMIT_HASH"

          echo "--- Processing branch: $ACTIVE_RELEASE_BRANCH ---"

          # Check if the remote branch already exists
          if git show-ref --quiet refs/remotes/origin/$ACTIVE_RELEASE_BRANCH; then
            echo "Remote branch 'origin/$ACTIVE_RELEASE_BRANCH' exists. Checking sync status."

            SIDE_BRANCH_HEAD_HASH=$(git rev-parse origin/$ACTIVE_RELEASE_BRANCH)

            if [ "$SIDE_BRANCH_HEAD_HASH" == "$MAIN_COMMIT_HASH" ]; then
              echo "Branch $ACTIVE_RELEASE_BRANCH is already in sync with $MAIN_BRANCH. Skipping."
            else
              echo "Branch $ACTIVE_RELEASE_BRANCH is out of sync. Syncing with $MAIN_BRANCH."

              if git push origin $MAIN_BRANCH:$ACTIVE_RELEASE_BRANCH; then
                echo "Successfully synced $ACTIVE_RELEASE_BRANCH to $MAIN_BRANCH."
              else
                echo "Failed to sync $ACTIVE_RELEASE_BRANCH."
                exit 1
              fi
            fi
          else
            echo "Remote branch '$ACTIVE_RELEASE_BRANCH' does not exist. Creating it from $MAIN_BRANCH."

            git checkout -b $ACTIVE_RELEASE_BRANCH $MAIN_BRANCH

            if git push -u origin $ACTIVE_RELEASE_BRANCH; then
              echo "Successfully created and pushed $ACTIVE_RELEASE_BRANCH."
            else
              echo "Failed to create $ACTIVE_RELEASE_BRANCH."
              exit 1
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

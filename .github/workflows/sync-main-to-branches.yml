name: Sync Main to Side Branches (Hard Reset & Create)

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  sync_to_side_branches:
    # Only run this job if the pull request was merged
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    permissions:
      contents: write # Needed for force push and branch creation

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history to ensure we have the main branch's commits
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"

      - name: Sync main to active release branch (or create it)
        run: |
          MAIN_BRANCH="main"
          ACTIVE_RELEASE_BRANCH="${{ vars.ACTIVE_RELEASE_BRANCH }}"

          # Validate that the variable is set
          if [ -z "$ACTIVE_RELEASE_BRANCH" ]; then
            echo "Error: ACTIVE_RELEASE_BRANCH repository variable is not set"
            echo "Please set it in Settings -> Secrets and variables -> Actions -> Variables"
            exit 1
          fi

          # Get the latest commit hash of the main branch
          MAIN_COMMIT_HASH=$(git rev-parse origin/$MAIN_BRANCH)
          echo "Main branch's latest commit hash: $MAIN_COMMIT_HASH"

          echo "--- Processing branch: $ACTIVE_RELEASE_BRANCH ---"

          # Always start by checking out the main branch to ensure a consistent base
          git checkout $MAIN_BRANCH

          # Check if the remote branch already exists
          if git show-ref --quiet refs/remotes/origin/$ACTIVE_RELEASE_BRANCH; then
            echo "Remote branch 'origin/$ACTIVE_RELEASE_BRANCH' exists. Checking sync status."

            SIDE_BRANCH_HEAD_HASH=$(git rev-parse origin/$ACTIVE_RELEASE_BRANCH)

            if [ "$SIDE_BRANCH_HEAD_HASH" == "$MAIN_COMMIT_HASH" ]; then
              echo "Branch $ACTIVE_RELEASE_BRANCH is already in sync with $MAIN_BRANCH. Skipping."
            else
              echo "Branch $ACTIVE_RELEASE_BRANCH is out of sync. Performing hard reset."

              git checkout $ACTIVE_RELEASE_BRANCH

              git reset --hard $MAIN_BRANCH

              if git push --force-with-lease origin $ACTIVE_RELEASE_BRANCH; then
                echo "Successfully hard reset and force pushed $ACTIVE_RELEASE_BRANCH to match $MAIN_BRANCH."
              else
                echo "Failed to force push $ACTIVE_RELEASE_BRANCH. This might indicate concurrent changes or protection rules."
              fi
            fi
          else
            # Branch does not exist remotely, create it as a copy of main
            echo "Remote branch 'origin/$ACTIVE_RELEASE_BRANCH' does not exist. Creating it as a copy of $MAIN_BRANCH."

            git checkout -b $ACTIVE_RELEASE_BRANCH $MAIN_BRANCH

            if git push -u origin $ACTIVE_RELEASE_BRANCH; then
              echo "Successfully created and pushed new branch $ACTIVE_RELEASE_BRANCH to match $MAIN_BRANCH."
            else
              echo "Failed to create and push new branch $ACTIVE_RELEASE_BRANCH."
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

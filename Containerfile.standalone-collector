# ┌─────────── Stage 1: UI stage ───────────────

FROM --platform=linux/amd64 registry.access.redhat.com/ubi9/ubi as ui

RUN dnf install -y npm wget

WORKDIR /app
COPY . .
RUN mkdir -p /app/www && cp -r ./agent-ui/* /app/www
RUN wget -P /app/www/js https://unpkg.com/axios/dist/axios.min.js

WORKDIR /app/www
RUN npm init -y && npm install @patternfly/patternfly
RUN cp -r ./node_modules/@patternfly/patternfly/assets css/
RUN cp -r ./node_modules/@patternfly/patternfly/patternfly.css css/

# ┌─────────── Stage 2: builder stage ───────────────

FROM --platform=linux/amd64 registry.access.redhat.com/ubi9/go-toolset AS builder

USER 0
WORKDIR /src

# prepare the policies directory
RUN mkdir -p /usr/share/opa/policies

# Grab the validation/policies folder (from forklift)
RUN curl -L https://github.com/kubev2v/forklift/archive/main.tar.gz \
    | tar -xz \
        --wildcards '*/validation/policies/*' \
        --strip-components=1 && \
        mv ./validation/policies/io /usr/share/opa/policies && \
        rm -rf ./validation

# build standalone binary
COPY go.mod go.sum ./
RUN go mod download
COPY . .

RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -buildvcs=false -o collect cmd/planner-standalone-collector/*.go

# └───────────

# ┌─────────── Stage 3: final stage ───────────────

FROM registry.access.redhat.com/ubi9/ubi-minimal

WORKDIR /app

# Copy in OPA, policies and the standalone binary
COPY --from=builder /usr/share/opa/policies     /usr/share/opa/policies
COPY --from=builder /src/collect                /usr/bin/collect
COPY --from=ui      /app/www/                   /var/www/planner

# Use non-root user
RUN chown -R 1001:0 /app
USER 1001

EXPOSE 3333
ENTRYPOINT collect \
    --username       "$VSPHERE_USER" \
    --password       "$VSPHERE_PASSWORD" \
    --url            "$VSPHERE_URL"
# └───────────
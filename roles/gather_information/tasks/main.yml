---
- name: Include vSphere creds
  ansible.builtin.include_vars:
    file: vsphere_creds.yml

- name: Create or clear the output file
  when: gather_information_store_in_a_file
  copy:
    content: ""
    dest: "{{ gather_information_output_file_name }}"

- name: Ensure the output file is writable
  when: gather_information_store_in_a_file
  file:
    path: "{{ gather_information_output_file_name }}"
    state: touch
    mode: '0644'

- name: Get a list of ESX hosts that vCenter knows about that are in state CONNECTED
  vmware.vmware_rest.vcenter_host_info:
    vcenter_hostname: "{{ gather_information_vsphere_hostname }}"
    vcenter_username: "{{ gather_information_vsphere_username }}"
    vcenter_password: "{{ gather_information_vsphere_password }}"
    vcenter_validate_certs: "{{ gather_information_vsphere_validate_certs }}"
    vcenter_rest_log_file: "{{ gather_information_vsphere_rest_log_file
      if gather_information_debug | default(false) else omit }}"
    connection_states: "{{ gather_information_vsphere_connected_states
      if (gather_information_vsphere_connected_states is defined and gather_information_vsphere_connected_states | length > 0) else omit }}"
  register: r_hosts

- name: Set fact with list of hosts to operate on that are POWERED_ON
  ansible.builtin.set_fact:
    r_discovered_hosts: "{{ r_hosts.value |
      map(attribute='name') }}"

- name: Get information from VMware vCenter
  community.vmware.vmware_about_info:
    hostname: '{{ gather_information_vsphere_hostname }}'
    username: '{{ gather_information_vsphere_username }}'
    password: '{{ gather_information_vsphere_password }}'
    validate_certs: "{{ gather_information_vsphere_validate_certs }}"
  register: vcenter_about_info

- name: Get vm information from VMware
  vmware.vmware_rest.vcenter_vm_info:
    vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
    vcenter_username: '{{ gather_information_vsphere_username }}'
    vcenter_password: '{{ gather_information_vsphere_password }}'
    vcenter_validate_certs: '{{ gather_information_vsphere_validate_certs }}'
  register: vcenter_vm_info

- name: Get vm_detailed information from VMware
  vmware.vmware_rest.vcenter_vm_info:
    vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
    vcenter_username: '{{ gather_information_vsphere_username }}'
    vcenter_password: '{{ gather_information_vsphere_password }}'
    vcenter_validate_certs: '{{ gather_information_vsphere_validate_certs }}'
    vm: "{{ item['vm'] }}"
  loop: "{{ vcenter_vm_info['value'] }}"
  ignore_errors: yes
  register: vcenter_vm_detailed_info

- name: Get vm_tools information from VMware
  vmware.vmware_rest.vcenter_vm_tools_info:
    vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
    vcenter_username: '{{ gather_information_vsphere_username }}'
    vcenter_password: '{{ gather_information_vsphere_password }}'
    vcenter_validate_certs: '{{ gather_information_vsphere_validate_certs }}'
    vm: "{{ item['vm'] }}"
  loop: "{{ vcenter_vm_info['value'] }}"
  ignore_errors: yes
  register: vcenter_vm_tools_info

- name: Get vm network information from VMware
  vmware.vmware_rest.vcenter_vm_guest_networking_info:
    vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
    vcenter_username: '{{ gather_information_vsphere_username }}'
    vcenter_password: '{{ gather_information_vsphere_password }}'
    vcenter_validate_certs: '{{ gather_information_vsphere_validate_certs }}'
    vm: "{{ item['vm'] }}"
  loop: "{{ vcenter_vm_info['value'] }}"
  ignore_errors: yes
  register: vcenter_vm_network_info

# datacenter information
- name: Get datacenter information from VMWare
  vmware.vmware_rest.vcenter_datacenter_info:
    vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
    vcenter_username: '{{ gather_information_vsphere_username }}'
    vcenter_password: '{{ gather_information_vsphere_password }}'
    vcenter_validate_certs: false
  register: gather_information_vcenter_datacenter_info

- name: Get folders information
  community.vmware.vmware_folder_info:
    hostname: '{{ gather_information_vsphere_hostname }}'
    username: '{{ gather_information_vsphere_username }}'
    password: '{{ gather_information_vsphere_password }}'
    validate_certs: false
    datacenter: "{{ item['name'] }}"
  loop: "{{ gather_information_vcenter_datacenter_info['value'] }}"
  register: gather_information_vcenter_folder_info

  # cluster info
- name: Get cluster information
  vmware.vmware_rest.vcenter_cluster_info:
    vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
    vcenter_username: '{{ gather_information_vsphere_username }}'
    vcenter_password: '{{ gather_information_vsphere_password }}'
    vcenter_validate_certs: false
  register: gather_information_vcenter_cluster_info

- name: Gather info about ESXi Host for each cluster
  community.vmware.vmware_host_config_info:
    hostname: '{{ gather_information_vsphere_hostname }}'
    username: '{{ gather_information_vsphere_username }}'
    password: '{{ gather_information_vsphere_password }}'
    validate_certs: "{{ gather_information_vsphere_validate_certs }}"
    cluster_name: "{{ item['name'] }}"
  loop: "{{ gather_information_vcenter_cluster_info['value']}}"
  register: vmware_host_config_info

- name: Get standard portgoroup info
  community.vmware.vmware_portgroup_info:
    hostname: '{{ gather_information_vsphere_hostname }}'
    username: '{{ gather_information_vsphere_username }}'
    password: '{{ gather_information_vsphere_password }}'
    validate_certs: "{{ gather_information_vsphere_validate_certs }}"
    cluster_name: "{{ item['name'] }}"
  loop: "{{ gather_information_vcenter_cluster_info['value']}}"
  register: vmware_standard_pg_info

- name: Get distributed portgoroup info
  community.vmware.vmware_dvs_portgroup_info:
    hostname: '{{ gather_information_vsphere_hostname }}'
    username: '{{ gather_information_vsphere_username }}'
    password: '{{ gather_information_vsphere_password }}'
    validate_certs: "{{ gather_information_vsphere_validate_certs }}"
    datacenter: "{{ item['name'] }}"
  loop: "{{ gather_information_vcenter_datacenter_info['value']}}"
  register: vmware_dvpg_info

# network info
- name: Get network information from VMWare
  vmware.vmware_rest.vcenter_network_info:
    vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
    vcenter_username: '{{ gather_information_vsphere_username }}'
    vcenter_password: '{{ gather_information_vsphere_password }}'
    vcenter_validate_certs: false
  register: gather_information_vcenter_network_info

- name: Gather all registered dvswitch
  community.vmware.vmware_dvswitch_info:
    hostname: '{{ gather_information_vsphere_hostname }}'
    username: '{{ gather_information_vsphere_username }}'
    password: '{{ gather_information_vsphere_password }}'
    validate_certs: false
  delegate_to: localhost
  register: dvswitch_info

# datastore info
- name: Get datastore information
  vmware.vmware_rest.vcenter_datastore_info:
    vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
    vcenter_username: '{{ gather_information_vsphere_username }}'
    vcenter_password: '{{ gather_information_vsphere_password }}'
    vcenter_validate_certs: false
  register: gather_information_vcenter_datastore_info

# resourcepool info
- name: Get resourcepool information
  vmware.vmware_rest.vcenter_resourcepool_info:
    vcenter_hostname: '{{ gather_information_vsphere_hostname }}'
    vcenter_username: '{{ gather_information_vsphere_username }}'
    vcenter_password: '{{ gather_information_vsphere_password }}'
    vcenter_validate_certs: false
  register: gather_information_vcenter_resourcepool_info

- name: Generating output
  when: gather_information_store_in_a_file
  set_fact:
    json_output: |
      {
        "esxi_hosts": {{ r_hosts.value | to_json }},
        "powered_on_hosts": {{ r_discovered_hosts | to_json }},
        "information_from_vmware": {{ vcenter_about_info.about_info | to_json }},
        "vm_list": {{ vcenter_vm_info.value | to_json }},
        "vm_details": {{ vcenter_vm_detailed_info.results | map(attribute='value') | list | to_json}},
        "vm_tools": {{ vcenter_vm_tools_info.results | map(attribute='value') | list | to_json }},
        "vm_network_information": {{ vcenter_vm_network_info.results | to_json }},
        "datacenters_information": {{ gather_information_vcenter_datacenter_info | to_json }},
        "folders_information": {{ gather_information_vcenter_folder_info | to_json }},
        "clusters_information": {{ gather_information_vcenter_cluster_info.value | to_json }},
        "esxis_information": {{ vmware_host_config_info.results | to_json }},
        "networks_information": {{ gather_information_vcenter_network_info.value | to_json }},
        "dvswitches_information": {{ dvswitch_info | to_json }},
        "datastore_information": {{ gather_information_vcenter_datastore_info.value | to_json}},
        "resourcePools_information": {{ gather_information_vcenter_resourcepool_info | to_json}},
        "standard_pg_info": {{ vmware_standard_pg_info.results | to_json}},
        "distributed_pg_info": {{ vmware_dvpg_info | to_json}}
      }

- name: Prettify the json output file
  when: gather_information_store_in_a_file
  set_fact:
    prettify_json_output: "{{ json_output | to_json(indent=4) }}"

- name: Store the prettify json
  when: gather_information_store_in_a_file
  copy:
    content: "{{ prettify_json_output }}"
    dest: "{{ gather_information_output_file_name }}"

- name: total_vms
  set_fact:
    vm_detailed: "{{ vcenter_vm_detailed_info.results | map(attribute='value') | list }}"
- name: total_vms
  set_fact:
    aggregated_data:
      total_vms: "{{ vcenter_vm_info.value | length }}"
      total_cpu_cores: "{{ vcenter_vm_info.value |  map(attribute='cpu_count') | sum  }}"
      total_memory_MiB: "{{ vcenter_vm_info.value |   map(attribute='memory_size_MiB') | sum }}"
      vms_powered_on: "{{ vcenter_vm_info.value |  selectattr('power_state', 'equalto', 'POWERED_ON') | list | length  }}"
      vms_powered_off: "{{ vcenter_vm_info.value | selectattr('power_state', 'equalto', 'POWERED_OFF') | list | length }}"
      disks_in_gb: "{{ vm_detailed | map(attribute='disks') }}"

- name: Debug print vm_list
  ansible.builtin.debug:
    var: aggregated_data



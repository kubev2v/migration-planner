# Builder container
FROM --platform=linux/amd64 registry.access.redhat.com/ubi9/go-toolset AS builder

ARG GCFLAGS=""
ARG SOURCE_GIT_COMMIT=""
ARG SOURCE_GIT_TAG=""

WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

COPY . .

USER 0
RUN source hack/version.sh && \
    echo "=== VERSION BUILD INFO ===" && \
    echo "SOURCE_GIT_COMMIT=${SOURCE_GIT_COMMIT}" && \
    echo "SOURCE_GIT_COMMIT_SHORT=${SOURCE_GIT_COMMIT_SHORT}" && \
    echo "SOURCE_GIT_TAG=${SOURCE_GIT_TAG}" && \
    echo "MAJOR=${MAJOR} MINOR=${MINOR} PATCH=${PATCH}" && \
    echo "GO_LDFLAGS=${GO_LDFLAGS}" && \
    echo "=== END VERSION BUILD INFO ===" && \
    CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -buildvcs=false ${GCFLAGS:+-gcflags "$GCFLAGS"} \
    -ldflags "${GO_LDFLAGS}" \
    -o /planner-api cmd/planner-api/*.go

# Download OPA policies from Forklift repository
RUN echo "Downloading OPA policies using Makefile target..." && \
    OPA_POLICIES_DIR=/app/policies make setup-opa-policies

# Final runtime image
FROM --platform=linux/amd64 registry.access.redhat.com/ubi9/ubi-minimal

WORKDIR /app

COPY /data /app/data/
COPY /pkg/migrations/sql /app/migrations/
COPY --from=builder /planner-api /app/
COPY --from=builder /app/policies /app/policies/

# Use non-root user
RUN chown -R 1001:0 /app
USER 1001

# Run the server
EXPOSE 3443
ENTRYPOINT ["/bin/bash", "-c", "/app/planner-api run"]

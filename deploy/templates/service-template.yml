---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: assisted-migration-service
parameters:
  - name: DEBUG_MODE
    description: If set the debug port 400001 will be opened on Agent VM
    value: ""
  - name: MIGRATION_PLANNER_IMAGE
    required: true
  - name: MIGRATION_PLANNER_API_IMAGE_PULL_POLICY
    value: Always
  - name: IMAGE_TAG
    value: latest
  - name: MIGRATION_PLANNER_ISO_PATH
    value: /iso/rhcos-live.x86_64.iso
  - name: MIGRATION_PLANNER_ISO_URL
    value: https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/rhcos-live.x86_64.iso
  - name: MIGRATION_PLANNER_URL
    description: The API URL of the migration assessment
    required: true
  - name: MIGRATION_PLANNER_UI_URL
    description: The console URL of the migration assessment
    required: true
  - name: MIGRATION_PLANNER_IMAGE_URL
    description: The URL for the Agent OVA file
    required: true
  - name: MIGRATION_PLANNER_AGENT_IMAGE
    description: Migration Discovery Service image
    required: true
  - name: MIGRATION_PLANNER_REPLICAS
    description: Number of replicas of the service to run.
    value: "3"
  - name: MIGRATION_PLANNER_MEMORY_REQUEST
    description: Memory request for the API pods.
    value: "400Mi"
  - name: MIGRATION_PLANNER_MEMORY_LIMIT
    description: Memory limit for the API pods.
    value: "2000Mi"
  - name: MIGRATION_PLANNER_CPU_REQUEST
    description: CPU request for the API pods.
    value: "300m"
  - name: MIGRATION_PLANNER_CPU_LIMIT
    description: CPU limit for the API pods.
    value: "500m"
  - name: DB_SECRET_NAME
    description: The name of the OpenShift Secret used for the database.
    displayName: Database Secret Name
    value: migration-planner-db
  - name: PERSISTENT_DISK_DEVICE
    value: /dev/sda
  - name: INSECURE_REGISTRY
    value: "false"
  # Svc Config values
  - name: MIGRATION_PLANNER_ADDRESS
    value: ":13443"
  - name: MIGRATION_PLANNER_AGENT_ENDPOINT_ADDRESS
    value: ":17443"
  - name: MIGRATION_PLANNER_IMAGE_ENDPOINT_ADDRESS
    value: ":21443"
  - name: MIGRATION_PLANNER_BASE_URL
    value: "https://localhost:3443"
  - name: MIGRATION_PLANNER_BASE_AGENT_ENDPOINT_URL
    value: "https://localhost:7443"
  - name: MIGRATION_PLANNER_BASE_IMAGE_ENDPOINT_URL
    value: "https://localhost:11443"
  - name: MIGRATION_PLANNER_LOG_LEVEL
    value: "info"
  # Kafka Config values
  - name: MIGRATION_PLANNER_KAFKA_BROKERS
  - name: MIGRATION_PLANNER_KAFKA_TOPIC
  - name: MIGRATION_PLANNER_KAFKA_VERSION
  - name: MIGRATION_PLANNER_KAFKA_CLIENT_ID
  # Auth Config values
  - name: MIGRATION_PLANNER_AUTH
    description: Define the backend authentication mechanism
  - name: MIGRATION_PLANNER_JWK_URL
    description: URL of the x.509 certificate chain that was used to verify the digital signature of the JWT
  - name: MIGRATION_PLANNER_MIGRATIONS_FOLDER
    description: Path to the migration folder containing the sql files used to migrate the db
    value: "/app/migrations"
  # Envoy Config values
  - name: ENVOY_IMAGE
    description: Envoy container image
    value: docker.io/envoyproxy/envoy:v1.33.2

objects:
  - kind: ServiceAccount
    apiVersion: v1
    metadata:
      name: migration-planner
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: migration-planner
      name: migration-planner
    spec:
      ports:
        - name: migration-planner
          port: 3443
          protocol: TCP
          targetPort: 3443
      selector:
        app: migration-planner
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: migration-planner
      name: migration-planner-agent
    spec:
      ports:
        - name: migration-planner-agent
          port: 7443
          protocol: TCP
          targetPort: 7443
      selector:
        app: migration-planner
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: migration-planner
      name: migration-planner-image
    spec:
      ports:
        - name: migration-planner-image
          port: 11443
          protocol: TCP
          targetPort: 11443
      selector:
        app: migration-planner
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: migration-planner
        port: metrics
      annotations:
        description: Expose the migration planner metrics endpoint
      name: migration-planner-metrics
    spec:
      selector:
        app: migration-planner
      ports:
        - name: metrics
          port: 8080
          protocol: TCP
          targetPort: 8080
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: migration-planner
        port: envoy-metrics
      annotations:
        description: Expose the envoy metrics endpoint
      name: migration-planner-envoy-metrics
    spec:
      selector:
        app: migration-planner
      ports:
        - name: metrics
          port: 9000
          protocol: TCP
          targetPort: 9000
  - kind: Deployment
    apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
    metadata:
      name: migration-planner
    spec:
      selector:
        matchLabels:
          app: migration-planner
      replicas: ${{MIGRATION_PLANNER_REPLICAS}}
      template:
        metadata:
          labels:
            app: migration-planner
        spec:
          containers:
            - name: envoy
              image: ${ENVOY_IMAGE}
              imagePullPolicy: IfNotPresent
              command:
                - envoy
                - --log-level
                - debug
                - --config-path
                - /etc/envoy/envoy.yaml
              volumeMounts:
                - name: envoy-config
                  mountPath: /etc/envoy/
                - name: envoy-unix-sockets
                  mountPath: /sockets
              ports:
                - containerPort: 3443
                  name: api-port
                - containerPort: 7443
                  name: agent-api-port
                - containerPort: 11443
                  name: image-port
                - containerPort: 9000
                  name: metrics-envoy
              livenessProbe:
                httpGet:
                  path: /ready
                  port: 9000
                initialDelaySeconds: 10
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 10
              readinessProbe:
                httpGet:
                  path: /ready
                  port: 9000
                initialDelaySeconds: 10
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 10
              resources:
                requests:
                  memory: 128Mi
                  cpu: 250m
                limits:
                  memory: 256Mi
                  cpu: 500m
            - name: migration-planner
              resources:
                requests:
                  cpu: ${MIGRATION_PLANNER_CPU_REQUEST}
                  memory: ${MIGRATION_PLANNER_MEMORY_REQUEST}
                limits:
                  cpu: ${MIGRATION_PLANNER_CPU_LIMIT}
                  memory: ${MIGRATION_PLANNER_MEMORY_LIMIT}
              image: ${MIGRATION_PLANNER_IMAGE}:${IMAGE_TAG}
              imagePullPolicy: ${MIGRATION_PLANNER_API_IMAGE_PULL_POLICY}
              ports:
                - containerPort: 8080
                  name: backend-metrics
                - containerPort: 13443
                  name: probe-port
              livenessProbe:
                tcpSocket:
                  port: 13443
                initialDelaySeconds: 30
              readinessProbe:
                tcpSocket:
                  port: 7443
                initialDelaySeconds: 30
              env:
                - name: CONFIG_SERVER
                  value: ${MIGRATION_PLANNER_URL}
                - name: CONFIG_SERVER_UI
                  value: ${MIGRATION_PLANNER_UI_URL}/migrate/wizard
                - name: MIGRATION_PLANNER_IMAGE_URL
                  value: ${MIGRATION_PLANNER_IMAGE_URL}
                - name: MIGRATION_PLANNER_AGENT_IMAGE
                  value: ${MIGRATION_PLANNER_AGENT_IMAGE}:${IMAGE_TAG}
                - name: BASE_AGENT_ENDPOINT_URL
                  value: ${MIGRATION_PLANNER_URL}
                - name: DEBUG_MODE
                  value: ${DEBUG_MODE}
                - name: PERSISTENT_DISK_DEVICE
                  value: ${PERSISTENT_DISK_DEVICE}
                - name:  INSECURE_REGISTRY
                  value: ${INSECURE_REGISTRY}
                - name: MIGRATION_PLANNER_ISO_PATH
                  value: ${MIGRATION_PLANNER_ISO_PATH}
                - name: MIGRATION_PLANNER_ISO_URL
                  value: ${MIGRATION_PLANNER_ISO_URL}
                # Svc Config values
                - name: MIGRATION_PLANNER_ADDRESS
                  value: ${MIGRATION_PLANNER_ADDRESS}
                - name: MIGRATION_PLANNER_AGENT_ENDPOINT_ADDRESS
                  value: ${MIGRATION_PLANNER_AGENT_ENDPOINT_ADDRESS}
                - name: MIGRATION_PLANNER_IMAGE_ENDPOINT_ADDRESS
                  value: ${MIGRATION_PLANNER_IMAGE_ENDPOINT_ADDRESS}
                - name: MIGRATION_PLANNER_BASE_URL
                  value: ${MIGRATION_PLANNER_BASE_URL}
                - name: MIGRATION_PLANNER_BASE_AGENT_ENDPOINT_URL
                  value: ${MIGRATION_PLANNER_BASE_AGENT_ENDPOINT_URL}
                - name: MIGRATION_PLANNER_BASE_IMAGE_ENDPOINT_URL
                  value: ${MIGRATION_PLANNER_BASE_IMAGE_ENDPOINT_URL}
                - name: MIGRATION_PLANNER_LOG_LEVEL
                  value: ${MIGRATION_PLANNER_LOG_LEVEL}
                # Kafka Config values
                - name: MIGRATION_PLANNER_KAFKA_BROKERS
                  value: ${MIGRATION_PLANNER_KAFKA_BROKERS}
                - name: MIGRATION_PLANNER_KAFKA_TOPIC
                  value: ${MIGRATION_PLANNER_KAFKA_TOPIC}
                - name: MIGRATION_PLANNER_KAFKA_VERSION
                  value: ${MIGRATION_PLANNER_KAFKA_VERSION}
                - name: MIGRATION_PLANNER_KAFKA_CLIENT_ID
                  value: ${MIGRATION_PLANNER_KAFKA_CLIENT_ID}
                - name: MIGRATION_PLANNER_MIGRATIONS_FOLDER
                  value: ${MIGRATION_PLANNER_MIGRATIONS_FOLDER}
                # Auth Config values
                - name: MIGRATION_PLANNER_AUTH
                  value: ${MIGRATION_PLANNER_AUTH}
                - name: MIGRATION_PLANNER_PRIVATE_KEY
                  valueFrom:
                    secretKeyRef:
                      name: migration-planner-private-key-secret
                      key: private-key
                      optional: true
                - name: MIGRATION_PLANNER_JWK_URL
                  value: ${MIGRATION_PLANNER_JWK_URL}
                # DB Config values
                - name: DB_HOST
                  valueFrom:
                    secretKeyRef:
                      name: ${DB_SECRET_NAME}
                      key: db.host
                - name: DB_NAME
                  valueFrom:
                    secretKeyRef:
                      name: ${DB_SECRET_NAME}
                      key: db.name
                - name: DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: ${DB_SECRET_NAME}
                      key: db.password
                - name: DB_PORT
                  valueFrom:
                    secretKeyRef:
                      name: ${DB_SECRET_NAME}
                      key: db.port
                - name: DB_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${DB_SECRET_NAME}
                      key: db.user
              volumeMounts:
                - name: migration-planner-dir
                  mountPath: "/.migration-planner"
                - name: iso-storage
                  mountPath: /iso
          serviceAccountName: migration-planner
          volumes:
            - name: iso-storage
              emptyDir: {}
            - name: migration-planner-dir
              emptyDir:
                sizeLimit: 500Mi
            - name: envoy-config
              configMap:
                name: migration-planner-envoy
            - name: envoy-unix-sockets
              emptyDir:
                medium: Memory

openapi: 3.0.1
info:
  title: Migration Planner API
  version: undefined
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: /
paths:
  /api/v1/sources:
    get:
      tags:
        - source
      description: list sources
      operationId: listSources
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceList'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - source
      description: create a source
      operationId: createSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCreate'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - source
      description: delete a collection of sources
      operationId: deleteSources
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/sources/{id}:
    get:
      tags:
        - source
      description: read the specified source
      operationId: readSource
      parameters:
        - name: id
          in: path
          description: ID of the source
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - source
      description: delete a source
      operationId: deleteSource
      parameters:
        - name: id
          in: path
          description: ID of the source
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/sources/{id}/image:
    get:
      tags:
        - source
        - image
      description: get the OVA file for the source
      operationId: getSourceImage
      parameters:
        - name: id
          in: path
          description: ID of the source
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: An OVA image
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/agents:
    get:
      tags:
        - agent
      description: list agents
      operationId: listAgents
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentList"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /health:
    get:
      tags:
        - health
      description: health check
      operationId: health
      responses:
        "200":
          description: OK

components:
  schemas:
    Source:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        status:
          type: string
          enum: [not-connected, waiting-for-credentials, error, gathering-initial-inventory, up-to-date]
        statusInfo:
          type: string
        inventory:
          $ref: '#/components/schemas/Inventory'
        credentialUrl:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        sshKey:
          type: string
      required:
        - id
        - name
        - status
        - statusInfo
        - createdAt
        - updatedAt
        - sshKey

    SourceCreate:
      type: object
      properties:
        name:
          type: string
        sshKey:
          type: string
      required:
        - name
        - sshKey

    SourceList:
      type: array
      items:
        $ref: '#/components/schemas/Source'

    Error:
      properties:
        message:
          type: string
          description: Error message
      required:
        - message

    Status:
      type: object
      properties:
        message:
          type: string
          description: A human-readable description of the status of this operation.
        reason:
          type: string
          description: A machine-readable description of why this operation is in the "Failure" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.
        status:
          type: string
          description: 'Status of the operation. One of: "Success" or "Failure". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
      description: Status is a return value for calls that don't return other objects.

    Inventory:
      type: object
      required:
      - vms
      - infra
      properties:
        vms:
          type: object
          $ref: '#/components/schemas/VMs'
        infra:
          type: object
          $ref: '#/components/schemas/Infra'

    VMs:
      type: object
      required:
      - total
      - totalMigratable
      - cpuCores
      - ramGB
      - diskGB
      - diskCount
      - os
      - powerStates
      - notMigratableReasons
      - migrationWarnings
      properties:
        total:
          type: integer
        totalMigratable:
          type: integer
        totalMigratableWithWarnings:
          type: integer
        cpuCores:
          type: object
          $ref: '#/components/schemas/VMResourceBreakdown'
        ramGB:
          type: object
          $ref: '#/components/schemas/VMResourceBreakdown'
        diskGB:
          type: object
          $ref: '#/components/schemas/VMResourceBreakdown'
        diskCount:
          type: object
          $ref: '#/components/schemas/VMResourceBreakdown'
        powerStates:
          type: object
          additionalProperties:
            type: integer
        os:
          type: object
          additionalProperties:
            type: integer
        notMigratableReasons:
          type: object
          $ref: '#/components/schemas/MigrationIssues'
        migrationWarnings:
          type: object
          $ref: '#/components/schemas/MigrationIssues'

    Infra:
      type: object
      required:
      - totalHosts
      - totalClusters
      - hostsPerCluster
      - hostPowerStates
      - networks
      - datastores
      properties:
        totalHosts:
          type: integer
        totalClusters:
          type: integer
        hostsPerCluster:
          type: array
          items:
            type: integer
        hostPowerStates:
          type: object
          additionalProperties:
            type: integer
        networks:
          type: array
          items:
            type: object
            required:
              - type
              - name
            properties:
              type:
                type: string
                enum: [standard, distributed]
              name:
                type: string
        datastores:
          type: array
          items:
            type: object
            required:
              - type
              - totalCapacityGB
              - freeCapacityGB
            properties:
              type:
                type: string
              totalCapacityGB:
                type: integer
              freeCapacityGB:
                type: integer

    VMResourceBreakdown:
      type: object
      required:
      - histogram
      - total
      - totalForMigratable
      - totalForMigratableWithWarnings
      - totalForNotMigratable
      properties:
        total:
          type: integer
        totalForMigratable:
          type: integer
        totalForMigratableWithWarnings:
          type: integer
        totalForNotMigratable:
          type: integer
        histogram:
          type: object
          required:
          - minValue
          - step
          - data
          properties:
            minValue:
              type: integer
            step:
              type: integer
            data:
              type: array
              items:
                type: integer

    MigrationIssues:
      type: array
      items:
        type: object
        required:
        - label
        - assessment
        - count
        properties:
          label:
            type: string
          assessment:
            type: string
          count:
            type: integer

    Agent:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum: [not-connected, waiting-for-credentials, error, gathering-initial-inventory, up-to-date, source-gone]
        statusInfo:
          type: string
        credentialUrl:
          type: string
        sourceId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        associated:
          type: boolean
        version:
          type: string
      required:
        - id
        - status
        - statusInfo
        - credentialUrl
        - createdAt
        - updatedAt
        - associated
        - version

    AgentList:
      type: array
      items:
        $ref: '#/components/schemas/Agent'

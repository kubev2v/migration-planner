// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/kubev2v/migration-planner/api/v1alpha1"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"1w4Cjcn2YfufAAAA///91tbB2icAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "../openapi.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/kubev2v/migration-planner/api/v1alpha1"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "../openapi.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

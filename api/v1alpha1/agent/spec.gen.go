// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/kubev2v/migration-planner/api/v1alpha1"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "../openapi.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

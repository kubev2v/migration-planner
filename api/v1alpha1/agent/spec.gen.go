// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/kubev2v/migration-planner/api/v1alpha1"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "../openapi.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

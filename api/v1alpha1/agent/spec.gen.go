// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/kubev2v/migration-planner/api/v1alpha1"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"t/ayslKurx0FmpDt7faPAAAA//8KeMFppCAAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "../openapi.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

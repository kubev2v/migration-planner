// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/kubev2v/migration-planner/api/v1alpha1"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "../openapi.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

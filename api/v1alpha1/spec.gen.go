// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

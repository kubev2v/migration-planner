// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

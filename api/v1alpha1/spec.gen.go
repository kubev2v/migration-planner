// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

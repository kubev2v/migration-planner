// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

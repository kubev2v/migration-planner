// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

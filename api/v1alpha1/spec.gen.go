// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"wtP/kK9uVv8NAAD//0yr8f/2LQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

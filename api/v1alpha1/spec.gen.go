// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/wIAAP//ohrWvWE0AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

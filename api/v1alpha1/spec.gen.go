// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

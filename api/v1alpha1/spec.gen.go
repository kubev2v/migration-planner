// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

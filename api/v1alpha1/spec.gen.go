// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

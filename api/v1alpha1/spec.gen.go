// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"UF/hc96Ir6/W/w8AAP//CDx09L4wAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

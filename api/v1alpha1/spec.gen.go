// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xa62/bOBL/VwjuAXcH+JF2e8DB39L0ZWwfQdJkP7TFYiyOLW4kUkuO7PoK/+8HkpIt",
	"W5Tt5JJuD5tvSUjO8zfD31D5xhOdF1qhIstH37hNUszB/3g6Q0Xuh8LoAg1J9H9ODAKhOPVLU21yID7i",
	"Agj7JHPkPU7LAvmIWzJSzfiq544IVCQhuzKZO9baIcWWtLKUIibIElDprUBV5nz0iStN/UQrhQmhO7IA",
	"SVLN+lNt+hu1lvc4GqMN7/EZUIpOYF8q6Rb7Us1RkTZL3uNl0Sfdd97wHre6NAn2Z1oh/9JpzlhNddSp",
	"shC3jdQcjZVaRcStetzgH6U0KJzfPj5VOLYM2Y12r5GwpkkbXRvP9OR3TMjZ4XN/bvTXZRsAKVHRlUe3",
	"ZrsWlV5LbDvXMuEFEFjSBtsWCGlvxiKqY2oQz6CARNLy9fPGFqkIZ2i8kWDEAgyeJglmaFxA3uk5NjZP",
	"tM4QlNuca4FxdwqjSSc6++gXIhtIE2SHjKGu03NUQpvDSPCrbWWtUKwl9ur4dUdix7k6CjGkvPRl1UpR",
	"jtbCzHsm0CZGFuRxHfazerl3wLl635dVj4/V1EAEDDVO/G+SMPc//M3glI/4T8NNfxtWzW24gdYGeGAM",
	"LD06tKVzvUBzSUBBKAghnfmQnW+p7spmIzxOmj1Hc5aVltBsmdh5fG2LQlpoc7Pt2Y77c7uQlKTxioO8",
	"A5oV6uo2agmUACMCOMjISRn66Vp8j5fKlkWhjVuIdcN5BipalXHAettiiNoNQkB2iF9X3NyWNy7UsfVd",
	"/ZvNu8Lb+WrjoZGVXhN8MVfG65ullTdZo3kfUAPkXWwTVBV89u2/Pgvb3InDZXD9zraCUysKAnqVmTHf",
	"3sIkNMZtv25wGW9nkJV4GBzueL05pvWdnBlwtTi2tsR9hQHWorV5xWHanESXWysNNGW1Z/tNDdt6TUW1",
	"2GNgfenJRcTumnbtS13gZqveXdjYkVxLNrG7H6T1xjp2x3fiAKJY5+vqXFqdG8yl3erAjfv61qQrRqy8",
	"9m7m1LAhlumQ2TN/OMKf3Y9TmQDhWQpS3a5xFzWDOoiOwLUcS7XpeTnJZPILLg+jurMtB6/eSktHZ7eC",
	"eCf4r3xMP/hodhTC+OHAupv4xhRQq47GYT2DbBOb8HcmLQNmkEqjmG9jbKoNSyDLLKMUiAmt/k71Du1m",
	"ERaE20HgXcewqFOWljmovkEQMMmQNZaZnjJKkYWhIPwmLXNyfeccxAJoEGyYO3YV5ZCkUmGnqkW63FHg",
	"YiCVt+EzfwUyKw1+5pU9AzauDArRkZZhXpCTgcb/qjSTKmTcCYM5yMwpHrBTduHNZEkGRk4lWgaKvfn4",
	"8bx2NtEC2aR0UUYniZieozFSIJM02D9SRtNZxXITPPZBIdPTEfvML8skQWs/c6ZN09MBe6edK2qqR8xP",
	"RKPhcCZpcPNvO5DawTIvlaTlMNEqcC1t7FDgHLOhlbM+mCSVhAmVBodQSDfhOnBKrewgFz/ZApM+KNFf",
	"D4BHzFM1N2gzEXHUuBmrhet3FxiG5OcG4UbohYrMi9KSnhnI49z9lpQ4l+p6h0o0dlvC4ggKuBZSnQhE",
	"Ln5tO4K4h3W+0iZwEgfRY/f9Kin9FYySamb3n3mvab/4Hc82wa5Nj9p50KguC+IoiNCvpCjP6qFsPwlt",
	"Q2gVRtSzmqLd8XwYue9wOK9JZjNH++TsslL/2NEIW2hbdxGj/9cBtLi3UdZAfueIHqqio0ro+PqJTXy8",
	"raq3QWnt3ho5TQj6NGyHsiPBMezESqYwaOVMoeiXJjJE4ddCGrS/AUUeUNxauBodofX0wl1RVxdvGekb",
	"9Pf7cZNApXtb/rnBfrDNi3TiXRYzDUKqWWAWPsFMSJu463XJZA4zHBzk1k5fOxorz9/CG2omE1TWgyBQ",
	"YH5aQJIiezo44ZXBvL5SF4vFAPzyQJvZsDprh2/HZy/fX77sPx2cDFLKw3whyWFrMz+y8wyUQsNOz8eN",
	"x9ARL5XAqVQofPkVqKCQfMR/HpwMnjgQAKU+R+5iHs6fDEMwKgaRIUXYWvg7A5boLMOkZk71Sa+mKnzB",
	"R/yF3365XjVoC62qiefpyYlvr1pRNSdCUWRunJBaDX+vSFwox4P8PNAHn4Ftiz/84rx/dvLk3nSFd8KI",
	"qisFJaXayP+EkP/rHh3sVDp2VEhBxrDa0eMErpd8qh79/YvjDCP15yagztS5xU3iCjCQY3i2+rQrx3M/",
	"nbFFCoRzDEUscApl5saDQhtiNtVlJtgEGQiBgpH2uwzaMiP/OsNH/I8S/dBSFYxUSVYK/K0S5SjOOla7",
	"4/Lqy0OiazMw/kgIi6e60DaS6zDDM6jy3Up3WL+sF12vQ0vPtVjecxSrx4TVdkclU+KqlcEn96w7FtJg",
	"jwgp/A71+hwEuwjRfWxMq97u5TP8JsVq3w30or6BOoDcvHIONa7xi/ULQ73f9yF3MzbakOC7UG12ogMv",
	"Ot+hMe1rSn8RRD87+fnhlb7SZiKFQBU0Pnt4je81vdKl+n5Fu1F4Cx7xGikUUYGJnEoUXbX5GumxMB8L",
	"87EwH4rmF2WkPMO3ifWNyaZG52z9jYBNZdau1HDmRyvWh+KkW19vjmKm36NTnCr24fo0vEg89ozHnnH3",
	"nnGJxo3lL29NxIcBfKNvPEUQ7dbyBkH4yt8AdbeTuC3jamV/GxF/3p2/54o+pjyOgvNh+B2Ey23TGzJy",
	"ILv1u+1earfOL5tLYFcXb7u53YvqiTVs2pvycID5TP1/8bvtV+9YT/Nv2Ov35r9sJ3/2J80sTeinCBml",
	"nRgPyyxJMbmJta/MY/K4ttGwoNIaTNgqOzMnrcO/Fh1F2CZLVhb1VwtQ7OL6ozvvmRsT0mBC2TJC4dyR",
	"i6DrVSB5PziPy8uMZAGGhk5Mv/6mvpG+/W3JM9dW9D6muB2hf7z8mmD2z+a3pIlU4F+a93/l8Qrin3nu",
	"lyB2/q/Mwf+GiBAb53PAi5vEw392TMssWz6SyEcS+aAkctXj1u8K7SV84xzy1ZfVfwMAAP//NLeM5Z0z",
	"AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"PnUO6fpm/d8AAAD//16ZJzA5NAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

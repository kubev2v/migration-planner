// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

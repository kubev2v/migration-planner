// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

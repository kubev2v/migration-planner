// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

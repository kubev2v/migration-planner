// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

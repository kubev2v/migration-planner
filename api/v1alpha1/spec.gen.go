// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

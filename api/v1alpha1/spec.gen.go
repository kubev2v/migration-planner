// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"vd3+JwAA//9Lhfm0hCYAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

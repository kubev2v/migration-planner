// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

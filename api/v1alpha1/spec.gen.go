// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

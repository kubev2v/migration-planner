// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

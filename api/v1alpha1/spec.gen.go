// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

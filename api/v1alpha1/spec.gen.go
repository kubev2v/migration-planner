// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"vJFN+OZ6878AAAD//6qEH0E/JwAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

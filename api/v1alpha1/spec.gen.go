// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

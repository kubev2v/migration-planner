// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xZX28iORL/Kpb3pHtpIDM7J514yyTzB+1kBiWb7MNMtCraBe2N2+613bBcxHc/2e6G",
	"hnYDySWze9q8AbarylW/qvqVuaepygslUVpDh/fUpBnm4D+ezlBa96HQqkBtOfqfU41gkZ36panSOVg6",
	"pAws9izPkSbULgukQ2qs5nJGV4k7wlBaDuJaC3estYOzLWllyVlMkLFgS28FyjKnw69UKttLlZSYWnRH",
	"FsAtl7PeVOneRq2hCUWtlaYJnYHN0AnsccndYo/LOUqr9JImtCx6VvXcbWhCjSp1ir2ZkkhvO80ZyamK",
	"Xqos2EM9NUdtuJIRcauEavy95BqZu7f3T+WOLUN2vZ00AtY0aaNrczM1+Q1T6+zwsR9r9ceyDYDM2qIr",
	"jm7NdC1KtZbYvlzLhHOwYKzS2LaAcXM3YlEdU414BgWk3C4/vG1s4dLiDLU3EjRbgMbTNEWB2jnkQs2x",
	"sXmilECQbrNVFsQhieGX+1g8JVP6cDj9altZ6z5riUnthO7rxOL6zidBy6E5GgMzfwWGJtW8sB6FYT+p",
	"l5MDt6j33a4SOpJTDZHQ1VH137jF3H/4h8YpHdIfBptqNKhK0WADhA1MQGtY+lgqY8dqgfrKgg1CgTHu",
	"zAcx3lLdFbaGe5w0M0Z9JkpjUW+Z2Hl8bYtEu1D6bvtmO9efmwW3aRbPD8jjKKrhVRc9Y0Ey0CygwGo+",
	"KUP1W4tPaClNWRRKu4VY7ZoLkNEciiPT2xZD1K4TAoSD/7r85rZ8dK6Ore/q32zeFd6OVxsPjagkTfDF",
	"rjJa94FW3HiN5n1ADZB3vk1RVvDZt//mLGxzJw6nwc2FaTmnVhQEJJWZsbtd8JkGlxUjY0rcB1EwBo3J",
	"q97f7uWq3FppxFXABMVhRIVtSVNRLfYYgF35phyxu6Yr+5wYOM0qeQyLOZKj8CaK9sOl3rgv95Uca8y5",
	"2aphjf70YJIRIxJeezdTaNgQi1CIyJk/HOGL7uOUp2DxLAMuH1b6ipoxHIxq4BaOlZlsXE4ET3/C5WE0",
	"dha2cKtP3NijO1UFzU7QXnuffvHe7ADw6PlAthv4BuutVUf9sObc29Qg/E64IUA02lJLMgdRIpkqTVIQ",
	"whCbgSVMyX/aeody3JsE4aZPk2N5yCnJyhxkTyMwmAgkjWWipsRmSAIJDt+4IU6ur3j9mAM1ggk8e1dR",
	"DmnGJXaqWmTLHQXOB1x6G77R98BFqfEbrezpk1FlUPAONwTzwjoZqP1XqQiXIeJOGMyBC6e4T07JpTeT",
	"pAI0n3I0BCT5+PPP4/qyqWJIJqXzMjpJlqg5as0ZEm77+0eoaDgrX26cR75IJGo6JN/oVZmmaMw3SpRu",
	"3rRPLpS7ipyqIfETwHAwmHHbv/u36XPlYJmXktvlIFUysBWlzYDhHMXA8FkPdJpxi6ktNQ6g4G6ic+Dk",
	"Spp+zn4wBaY9kKy3HniOmB/q7tru5eyo8SqWCzcXlxiGwrca4Y6phYzMR9xYNdOQx9nvA0llzuWNA058",
	"t7FYHEGi1kKqE4EKxduto1h7eNt7pQOXcBA9dt8v3Ga/gJZczsz+M5+V3S9+52YbZ9emR+08aFSXBXEU",
	"RGhTWpRn9Vizn8a1IbQK09xZTa0eeT5Mp484nNfksBmjfXJ22aQf7htuC2XrMWLU/zrCFU82DGrIH+3R",
	"Q1l0VAodnz+xmYm2VSUblNbXWyOnCUEfhm1XdgQ4hp1YyhQaDZ9JZL0yPA5tJw/+UXCN5lewkScItxZa",
	"oyO0nl64FnV9+YlYdYe+vx/H4Cvd2/LHGnvBNi/SiXdRFAoYl7PALHyACeMmde11SXgOM+wf5NZOX9sb",
	"K8/fwpuh4ClK40EQKDA9LSDNkLzun9DKYFq31MVi0Qe/3Fd6NqjOmsGn0dm7z1fveq/7J/3M5sIDiFuH",
	"rc3cR8YCpERNTsejxuPfkJaS4ZRLZD79CpRQcDqkP/ZP+q8cCMBmPkauMQ/mrwbBGRWDEGgjbC38ToCk",
	"SghMa+ZUn/RqqsRndEjP/far9apGUyhZTTyvT058eVXSVvMdFIVw4wRXcvBbReJCOh7k54E++AhsW/zl",
	"J3f7NyevnkxXeGmLqLqWUNpMaf6f4PJ/PeEFO5WOHBWSIAhWOxJqwdWSr9Ujt3+zm2Ek/9wE1Bk6t7gJ",
	"XAEacgwPP1935XjupwRZZGBxjiGJGU6hFG48KJS2xGSqFIxMkABjyIhVfpdGUwrr3zfokP5eoh9aqoTh",
	"MhUlw18rUY7irH21Oy6vbp8TXZuB8a+EsHioC2UisQ4zPIEq3q1wh/WretHVOjT2rWLLJ/Zi9Ziw2q6o",
	"Vpe4akXw1RPrjrk02MNCCL9Dvr4FRi6Dd18K0yrZbT6De85W+zrQed2BOoDcbDmHCtfofP3CUO/3dch1",
	"xkYZYnQXqs1KdOBF5zsUpn1F6W+C6DcnPz6/0vdKTzhjKIPGN8+v8bOy71Upv1/SbhQ+gEd8QBuSqMCU",
	"Tzmyrtz8gPYlMV8S8yUxn4vmF2UkPcN/E+uOSaZa5WT9HwGZctHO1HDmr5asz8VJt/69OYqZfo9KcSrJ",
	"l5vT8CLxUjNeasbja8YVajeWv3swER8E8A3vaYbA2qXlIwLzmb8B6m4lcVtG1cr+MsL+vJ6/p0Ufkx5H",
	"wfkw/A7C5aHhDRE5EN363XYvtVvHl8w5kOvLT93c7rx6Yg2b9oY8HCA+Uv9f/G771TtW0/wb9vq9+W9b",
	"yd/8STNLE/oZgrBZJ8bDMkkzTO9i5Ut4TB5XNhoWVFpvvcXGp2jIgfD0P6Cr29V/AwAA///4oHzSpC0A",
	"AA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

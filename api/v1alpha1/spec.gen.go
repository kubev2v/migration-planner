// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"//+IA2Qj1jMAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

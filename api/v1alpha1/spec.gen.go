// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/76POy+bXgAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

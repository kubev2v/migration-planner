// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"eDgAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAD//xevvpOKIgAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

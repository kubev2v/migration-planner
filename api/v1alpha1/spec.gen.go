// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xaX3PbNhL/Khj0Zu6FEp1cbuZGb4qbNJo2iSdu3YfED2tyRaImARZYSuPL6LvfACAl",
	"SgQlOk1c58ZvFgHsn9/+9g+QfOaJKislUZLhs8/cJDmW4P6cZyjJ/lFpVaEmge4zGKMSAYSp/UV3FfIZ",
	"v1GqQJB8E/FEo12cu6NLpUsgPuMpEE5IlMij9owhLWTWHElRkoDiN110pO52pFjgPYWKNCjJqFonuBhY",
	"JKDaeYmyLvnsI5eKJomSEhPrcMTXIEjIbLJUerIz2/CIo9ZK84hnQDlagRMhhV2cCLlCSUrf8YjX1YTU",
	"xBrOW1smmZLIr6MhcxZyqYLW1lV6X6RXqI1QMiBuE3GNf9ZC27h+tOht4dgz5DBa3YB3TYq6RNkp3rmp",
	"bv7AhKxRjmi/COP8EISli8A/NC75jP8Q7wgaN+yMPTU3W1mgNdzZ369cEHqcLdEYyND+maJJtKjIoeD3",
	"s3Y5OgFKu+96E/GFXGroa0qBwJDS/tfWmf1NS414DhUkgu5+etkJhpCEGWrnmSIoTm5yX07F0q32JUaH",
	"doRicwhwrgxdqDXqSwJqCkKaCgsnFBd7Xg6Z25FupZkL1OdFbQj1HmSDx7e2SKS10rfHkJZQYjB3WuTa",
	"PDcEMgVtqZoKu+2mtsS9jsZh6/SMwc8HwbtrjkT+jUUmtH6of7f5UHgf3n74OiBGXe6GXFlsy1gPZtEm",
	"w7Gk9Rlji1CCson2sf1X536bPXG6JFy9NT1wWkVeQNSYGfLtrcg0WBIvjKmP5i4Yg8aUTWvstzJV7610",
	"4lrADRans9Vvi7qKWrFjCHbpekrA7qxt8aMqrBfj6uyCsAxp+iaN3nftrbS6do2ov63LxeOkazduouFq",
	"YEz+M979/SPBQwwBoUbvgDnS7wP9PcTFQ9Lce3YcFf2QAx3Bw4adO0fu0SQGaXFgwmD193rvNdo0+RvK",
	"7C0T92cY/50Jw4BppFpLtoKiRrZUmiVQFIZRDsRSJf9J7Q5lGcm8pWbKo7ED05zldQlyohFSuCmQdZaZ",
	"WjLKkXn2+F/CMCvX1dZpKJM1gvED6aGiEpJcSBxUtc7vDhRYDIR0Nnzir0EUtcZPvLFnyhaNQR4dYRiW",
	"FVkZqN1PqZiQnnxWGKxAFFbxlM3ZB2cmSwrQYinQMJDsza+/XrTOJipFdlNblNFKIqZWqLVIkQkKOm6O",
	"h7PBcgceey+RqeWMfeKXdZKgMZ84U7rr6ZS9VdYVuVQzlhNVZhbHmaDp7X/MVChLt7KWgu7iREk/4yht",
	"4hRXWMRGZBPQSS4IE6o1xlAJW+dsoRJKmmmZ/mAqTCYg08m2UvQTo5cEbR/vTw3pqHtIKLGu3n5Af3t6",
	"qRFuU7WWffm5MKQyDWV4TL/ntFkKeWWJE95tCKsR49pWSHPCD13hxm6HuSMT4mul/dRiKTp23++C8t9B",
	"SyEzc/zMO0XHxR94tgO7NT1o50mjhiwIsyAwoCVVfd7ev44PjH0Kbdz0f3veDnFfeN5f177gcNmOod0Y",
	"HZNzOLfaIacLmy9bXyJG/dW7XfXVbokayi9G9FQWjUqh8fkTup3xvqpox9LWvS1zuhR0YdiHciDAIe70",
	"U2bjRmc/SRYiQWlwNwDxeQVJjuz59MxOenZA520TWa/XU3DLU6WzuDlr4l8W56/eXb6aPJ+eTXMqCweZ",
	"IIvm7k7FLgqQEjWbXyw6T0EzXssUl0Ji6ghXoYRK8Bn/1/Rs+sy6DZQ7lG0rilfP4t0dJkPqd85CGGLN",
	"Hiev4XTKZ9zOYPN2SaOplLXfynh+dubKhpLUXOqgqgqRuLPxH81w4mk26l3KjXsO6n3z3v9s3Xxx9uyr",
	"qfOvXQFVv0moKVda/Ndj+++v6OOg0oXt8hIKdol6hZq1GyNOYLPlo7+D8mv7aT+k8WeRbnxAC6TA2Om/",
	"26HLyzgM749ufd6sVaChRP/C8vFQ1OLHdrZqRQn72ZKtvQnN/KVil8mka4w6+Jy6oVx/a44d49cDhPol",
	"pOwD/lmjob+N0y/OXnx7pe8UvVa1fORJ5PueGZNALFFFgUl7h2pPhvPpcrv6zdjcXGofU7nsYO3hce/9",
	"wx1nCEPbBx4Cwd0bw2NHsU/Z0YW/QfkoUcdX/q2w76v0t29DT7X/YWv/PSqCRkg9xSpMxFJgOsTcDwjp",
	"E2+fePvAvB2owbEom/feIK0zJEfA91dzthSFf1veY+Q+uX/CpvUtSv8P698bwVVCSBNDGv3zYUDPjZDg",
	"/gHnUFMvInPpgPMQP/H9/39G39G4bP+/SI6Q9vMqb9vF2MR6s+0ajz6zRuXAGM6O4thJTvzlGNrKmSMU",
	"lA+WSb/MkhyT21DoCof6abBsW+yY0mi9dlw0zmAfbP9IF/PN9eZ/AQAA//+UGqZvyScAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

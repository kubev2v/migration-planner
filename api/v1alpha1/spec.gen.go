// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

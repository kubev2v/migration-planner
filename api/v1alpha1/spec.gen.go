// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"V2gv4RvniK6/rP8bAAD//wwDPMcyNAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

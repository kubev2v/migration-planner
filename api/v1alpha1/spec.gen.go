// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

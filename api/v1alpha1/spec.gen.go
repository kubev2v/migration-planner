// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
